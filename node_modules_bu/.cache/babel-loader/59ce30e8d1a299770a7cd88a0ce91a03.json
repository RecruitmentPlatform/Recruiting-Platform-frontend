{"ast":null,"code":"var _jsxFileName = \"/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Job/Job.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport JobSingleCard from \"../Card/JobSingleCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_SINGLE_OPENING = gql`\n  query Opening($id:Int!){\n    opening(id:$id){\n      id\n      title\n      description\n      location\n      startMonth\n      startYear\n      salaryLow\n      salaryHigh\n      candidateId\n      employment {\n        title\n      }\n      candidateId\n      candidate {\n        first\n        last\n      }\n      companyId\n      company{\n        title\n        description\n        website\n      }\n    }\n  }`;\nexport default function Job() {\n  _s();\n\n  //const location = useLocation();\n  //const id = location.state.id;\n  var {\n    id\n  } = useParams();\n  id = parseInt(id);\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    data: openingData\n  } = useQuery(GET_SINGLE_OPENING, {\n    variables: {\n      id\n    }\n  });\n  const [isNull, setIsNull] = useState(false);\n  const uid = +sessionStorage.getItem(\"uid\"); // Modal data\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        sx: {\n          mx: 'auto'\n        },\n        children: openingData ? /*#__PURE__*/_jsxDEV(JobSingleCard, {\n          id: openingData.opening.id,\n          title: openingData.opening.title,\n          company: openingData.opening.company.title,\n          companyId: openingData.opening.companyId,\n          companyDescription: openingData.opening.company.description,\n          description: openingData.opening.description,\n          website: openingData.opening.company.website,\n          employment: openingData.opening.employment.title,\n          location: openingData.opening.location,\n          salaryLow: openingData.opening.salaryLow,\n          salaryHigh: openingData.opening.salaryHigh,\n          candidateId: openingData.opening.candidateId,\n          first: openingData.opening.candidate.first,\n          last: openingData.opening.candidate.last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Job, \"O0cFIuAHVjJpuXkoH5a/vQdbRmQ=\", false, function () {\n  return [useParams, useHistory, useQuery];\n});\n\n_c = Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Job/Job.js"],"names":["React","useState","useEffect","useHistory","useLocation","useParams","axios","gql","useQuery","useMutation","Container","Typography","Grid","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","Alert","JobSingleCard","GET_SINGLE_OPENING","Job","id","parseInt","history","loading","error","data","openingData","variables","isNull","setIsNull","uid","sessionStorage","getItem","open","setOpen","handleClickOpen","handleClose","message","my","mx","opening","title","company","companyId","description","website","employment","location","salaryLow","salaryHigh","candidateId","candidate","first","last"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from \"react\";\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { gql, useQuery, useMutation } from '@apollo/client';\n\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\n\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\n\nimport JobSingleCard from \"../Card/JobSingleCard\";\n\nconst GET_SINGLE_OPENING = gql`\n  query Opening($id:Int!){\n    opening(id:$id){\n      id\n      title\n      description\n      location\n      startMonth\n      startYear\n      salaryLow\n      salaryHigh\n      candidateId\n      employment {\n        title\n      }\n      candidateId\n      candidate {\n        first\n        last\n      }\n      companyId\n      company{\n        title\n        description\n        website\n      }\n    }\n  }`;\n\nexport default function Job() {\n    //const location = useLocation();\n    //const id = location.state.id;\n    var { id } = useParams();\n    id = parseInt(id);\n    const history = useHistory()\n    const { loading, error, data:openingData } = useQuery(GET_SINGLE_OPENING, {variables:{id}});\n    const [isNull, setIsNull] = useState(false);\n    const uid = +sessionStorage.getItem(\"uid\");\n\n    // Modal data\n    const [open, setOpen] = useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return(\n      <Container component=\"main\">\n        <Grid container sx={{ my: 2 }}>\n          <Grid item md={8} xs={12} sx={{ mx: 'auto'}}>\n            {openingData?\n              <JobSingleCard\n              id = {openingData.opening.id}\n              title = {openingData.opening.title}\n              company = {openingData.opening.company.title}\n              companyId = {openingData.opening.companyId}\n              companyDescription = {openingData.opening.company.description}\n              description = {openingData.opening.description}\n              website = {openingData.opening.company.website}\n              employment = {openingData.opening.employment.title}\n              location = {openingData.opening.location}\n              salaryLow = {openingData.opening.salaryLow}\n              salaryHigh = {openingData.opening.salaryHigh}\n              candidateId = {openingData.opening.candidateId}\n              first = {openingData.opening.candidate.first}\n              last = {openingData.opening.candidate.last} />\n              :null}\n        </Grid>\n      </Grid>\n    </Container>\n      );\n}\n"]},"metadata":{},"sourceType":"module"}