{"ast":null,"code":"var _jsxFileName = \"/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Card/PostCard.js\";\nimport { React, Fragment, useEffect, useState } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Chip from '@mui/material/Chip';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Typography from \"@mui/material/Typography\";\nimport WorkIcon from '@mui/icons-material/Work';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Divider from '@mui/material/Divider';\nimport { Card, CardContent, CardHeader, CardActionArea } from '@mui/material';\nimport JobMiniCard from \"../Card/JobMiniCard\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name)\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`\n  };\n}\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nconst PostCard = _ref => {\n  let {\n    id,\n    name,\n    date,\n    content,\n    openingId,\n    job_title,\n    job_description,\n    job_company,\n    job_employment,\n    job_location\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, { ...stringAvatar(name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this),\n      title: name,\n      subheader: /*#__PURE__*/_jsxDEV(Moment, {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pt: 0\n      },\n      children: [content, openingId ? /*#__PURE__*/_jsxDEV(JobMiniCard, {\n        id: openingId,\n        title: job_title,\n        description: job_description.length > 10 ? job_description.substring(0, 80) + \"...\" : job_description,\n        company: job_company,\n        employment: job_employment,\n        location: job_location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n};\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Card/PostCard.js"],"names":["React","Fragment","useEffect","useState","List","ListItem","ListItemButton","ListItemAvatar","Avatar","Chip","ListItemText","Typography","WorkIcon","LocationOnIcon","Divider","Card","CardContent","CardHeader","CardActionArea","JobMiniCard","Moment","stringAvatar","name","sx","bgcolor","stringToColor","children","split","string","hash","i","length","charCodeAt","color","value","toString","substr","PostCard","id","date","content","openingId","job_title","job_description","job_company","job_employment","job_location","mb","pt","substring"],"mappings":"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","sourcesContent":["import {React, Fragment, useEffect, useState} from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Chip from '@mui/material/Chip';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Typography from \"@mui/material/Typography\";\nimport WorkIcon from '@mui/icons-material/Work';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Divider from '@mui/material/Divider';\nimport {Card, CardContent, CardHeader, CardActionArea } from '@mui/material';\nimport JobMiniCard from \"../Card/JobMiniCard\";\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n  };\n}\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\nconst PostCard =({id, name, date, content, openingId, job_title, job_description, job_company, job_employment, job_location}) => {\n    return (<Card sx={{mb:2}}>\n              <CardHeader\n                avatar={<Avatar {...stringAvatar(name)} />}\n                title={name}\n                subheader=<Moment>{date}</Moment>\n              />\n              <CardContent sx={{pt:0}}>\n              {content}\n              {openingId?\n              <JobMiniCard\n                id = {openingId}\n                title = {job_title}\n                description={job_description.length > 10 ? job_description.substring(0, 80) + \"...\" : job_description}\n                company = {job_company}\n                employment = {job_employment}\n                location = {job_location} />\n              :null}\n              </CardContent>\n            </Card>)\n\n}\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}