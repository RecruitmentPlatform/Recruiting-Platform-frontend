{"ast":null,"code":"var _jsxFileName = \"/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport { React, Fragment, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport axios from \"axios\"; // import Box from \"@mui/material/Box\";\n\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Input from \"@mui/material/Input\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport Chip from '@mui/material/Chip';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport JobCard from \"../Card/JobCard\";\nimport JobMiniCard from \"../Card/JobMiniCard\";\nimport CompanyMiniCard from \"../Card/CompanyMiniCard\";\nimport { gql, useQuery, useLazyQuery, useMutation } from '@apollo/client';\nimport { Card, CardContent, CardHeader, CardActions, CardActionArea } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_OPENINGS = gql`\n  query Openings{\n    openings{\n      id\n      title\n      description\n      location\n      companyId\n      company{\n        title\n      }\n    }\n  }`;\nconst GET_COMPANIES = gql`\n  query Companies{\n    companies{\n      id\n      title\n      description\n    }\n  }`;\nexport default function Search() {\n  _s();\n\n  const uid = +sessionStorage.getItem(\"uid\");\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let query = params.get('q');\n  const {\n    loading: openingsLoading,\n    data: openingsData\n  } = useQuery(GET_OPENINGS, {\n    variables: {\n      query\n    }\n  });\n  const {\n    loading: companiesLoading,\n    data: companiesData\n  } = useQuery(GET_COMPANIES, {\n    variables: {\n      query\n    }\n  }); //const history = useHistory()\n\n  if (openingsLoading) return 'Loading...';\n  if (companiesLoading) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      px: {\n        xs: 1,\n        md: 2\n      },\n      py: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        sx: {\n          mx: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: \"flex\",\n            mb: 1,\n            px: 1\n          },\n          component: \"h1\",\n          variant: \"h6\",\n          children: [\"Results for \\\"\", query, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: \"flex\",\n            mb: 1,\n            px: 1\n          },\n          component: \"p\",\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"jobs found \", /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            sx: {\n              ml: 1\n            },\n            label: \"Post a free job\",\n            component: \"a\",\n            href: \"/post\",\n            variant: \"outlined\",\n            color: \"primary\",\n            clickable: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), openingsData.openings.map((o, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(JobMiniCard, {\n              id: o.id,\n              title: o.title,\n              description: o.description.length > 10 ? o.description.substring(0, 80) + \"...\" : o.description,\n              company: o.company.title\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 69\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: \"flex\",\n            mb: 1,\n            px: 1\n          },\n          component: \"p\",\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"companies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), companiesData.companies.map((company, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CompanyMiniCard, {\n              id: company.id,\n              title: company.title,\n              description: company.description.length > 10 ? company.description.substring(0, 80) + \"...\" : company.description,\n              src: `https://mui.com/static/images/avatar/${idx + 1}.jpg`\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 77\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Search, \"yAFbJRIkKyX37G12u7uqY3FpaRI=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/alexcastro/Dropbox/School/Fordham/Grad/Classes/Semester 3/Capstone Project/repos/frontend/src/components/Search/Search.js"],"names":["React","Fragment","useState","useHistory","useParams","axios","List","ListItem","ListItemButton","ListItemAvatar","Avatar","ListItemText","Divider","Typography","Grid","Container","Box","Input","InputAdornment","SearchIcon","LocationOnIcon","Paper","Button","TextField","Dialog","Chip","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","Alert","JobCard","JobMiniCard","CompanyMiniCard","gql","useQuery","useLazyQuery","useMutation","Card","CardContent","CardHeader","CardActions","CardActionArea","GET_OPENINGS","GET_COMPANIES","Search","uid","sessionStorage","getItem","search","window","location","params","URLSearchParams","query","get","loading","openingsLoading","data","openingsData","variables","companiesLoading","companiesData","px","xs","md","py","mx","display","mb","ml","openings","map","o","idx","marginBottom","id","title","description","length","substring","company","companies"],"mappings":"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","sourcesContent":["import {React, Fragment, useState} from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport axios from \"axios\"\n// import Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\n\nimport Input from \"@mui/material/Input\";\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport Chip from '@mui/material/Chip';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\n\nimport JobCard from \"../Card/JobCard\";\nimport JobMiniCard from \"../Card/JobMiniCard\";\nimport CompanyMiniCard from \"../Card/CompanyMiniCard\";\nimport { gql, useQuery, useLazyQuery, useMutation } from '@apollo/client';\n\nimport {Card, CardContent, CardHeader, CardActions, CardActionArea } from '@mui/material';\n\nconst GET_OPENINGS = gql`\n  query Openings{\n    openings{\n      id\n      title\n      description\n      location\n      companyId\n      company{\n        title\n      }\n    }\n  }`;\n\nconst GET_COMPANIES = gql`\n  query Companies{\n    companies{\n      id\n      title\n      description\n    }\n  }`;\n\nexport default function Search() {\n  const uid = +sessionStorage.getItem(\"uid\");\n  let search = window.location.search;\n  let params = new URLSearchParams(search);\n  let query = params.get('q');\n\n  const { loading:openingsLoading, data:openingsData } = useQuery(GET_OPENINGS, {variables:{query}});\n\n  const { loading:companiesLoading, data:companiesData } = useQuery(GET_COMPANIES, {variables:{query}});\n\n  //const history = useHistory()\n\n  if (openingsLoading) return 'Loading...';\n  if (companiesLoading) return 'Loading...';\n\n  return (<Container sx={{ px: { xs: 1, md: 2 }, py:1 }}>\n            <Grid container>\n              <Grid item md={6} sx={{ mx: 'auto'}}>\n                <Typography\n                  sx={{ display: \"flex\", mb:1, px:1 }}\n                  component=\"h1\"\n                  variant=\"h6\"\n                  >\n                  Results for \"{query}\"\n                </Typography>\n                <Typography\n                  sx={{ display: \"flex\", mb:1, px:1 }}\n                  component=\"p\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  >\n                  jobs found <Chip size=\"small\" sx={{ ml:1 }} label=\"Post a free job\" component=\"a\" href=\"/post\" variant=\"outlined\" color=\"primary\" clickable />\n                </Typography>\n                    {openingsData.openings.map((o, idx) => {return (<div  style={{marginBottom:'12px'}}>\n                      <JobMiniCard\n                        key = {idx}\n                        id = {o.id}\n                        title = {o.title}\n                        description={o.description.length > 10 ? o.description.substring(0, 80) + \"...\" : o.description}\n                        company = {o.company.title} />\n                      </div>)})}\n                <Typography\n                  sx={{ display: \"flex\", mb:1, px:1 }}\n                  component=\"p\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  >\n                  companies found\n                </Typography>\n                    {companiesData.companies.map((company, idx) => {return (<div>\n                      <CompanyMiniCard\n                        key = {idx}\n                        id = {company.id}\n                        title = {company.title}\n                        description={company.description.length > 10 ? company.description.substring(0, 80) + \"...\" : company.description}\n                        src = {`https://mui.com/static/images/avatar/${idx + 1}.jpg`} />\n                      </div>)})}\n              </Grid>\n            </Grid>\n          </Container>);\n}\n"]},"metadata":{},"sourceType":"module"}